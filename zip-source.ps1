# Script t·ª± ƒë·ªông n√©n d·ª± √°n (lo·∫°i b·ªè node_modules, dist, ...)
# Ch·∫°y script n√†y ƒë·ªÉ t·∫°o file zip clean

Write-Host "================================" -ForegroundColor Cyan
Write-Host "  N√©n d·ª± √°n Blog CMS" -ForegroundColor Cyan
Write-Host "================================" -ForegroundColor Cyan
Write-Host ""

$projectName = "Blog-CMS-Source"
$outputFile = "$projectName.zip"

# X√≥a file zip c≈© n·∫øu c√≥
if (Test-Path $outputFile) {
    Write-Host "[INFO] X√≥a file n√©n c≈©..." -ForegroundColor Yellow
    Remove-Item $outputFile -Force
}

# Danh s√°ch th∆∞ m·ª•c/file c·∫ßn lo·∫°i tr·ª´
$exclude = @(
    "node_modules",
    "dist",
    "build",
    ".git",
    ".vscode",
    ".idea",
    "*.log",
    ".env",
    "uploads",
    ".db_seeded",
    "*.zip",
    "*.rar",
    "*.7z",
    "coverage",
    "tmp",
    "temp"
)

Write-Host "[INFO] ƒêang n√©n d·ª± √°n..." -ForegroundColor Yellow
Write-Host "[INFO] Lo·∫°i tr·ª´: node_modules, dist, .env, uploads..." -ForegroundColor Gray
Write-Host ""

# L·∫•y t·∫•t c·∫£ file, lo·∫°i tr·ª´ nh·ªØng th∆∞ m·ª•c kh√¥ng c·∫ßn
$files = Get-ChildItem -Path . -Recurse -File | Where-Object {
    $filePath = $_.FullName
    $shouldExclude = $false
    
    foreach ($pattern in $exclude) {
        if ($filePath -like "*\$pattern\*" -or $filePath -like "*\$pattern") {
            $shouldExclude = $true
            break
        }
    }
    
    -not $shouldExclude
}

# T·∫°o file zip
try {
    $files | Compress-Archive -DestinationPath $outputFile -CompressionLevel Optimal -Force
    
    $fileSize = (Get-Item $outputFile).Length / 1MB
    
    Write-Host "================================" -ForegroundColor Green
    Write-Host "  N√âN TH√ÄNH C√îNG!" -ForegroundColor Green
    Write-Host "================================" -ForegroundColor Green
    Write-Host ""
    Write-Host "‚úÖ File ƒë√£ t·∫°o: $outputFile" -ForegroundColor Green
    Write-Host "‚úÖ K√≠ch th∆∞·ªõc: $([math]::Round($fileSize, 2)) MB" -ForegroundColor Green
    Write-Host ""
    Write-Host "üí° File ƒë√£ s·∫µn s√†ng ƒë·ªÉ n·ªôp b√†i!" -ForegroundColor Cyan
    Write-Host ""
    
} catch {
    Write-Host "‚ùå L·ªñI: Kh√¥ng th·ªÉ n√©n file!" -ForegroundColor Red
    Write-Host $_.Exception.Message -ForegroundColor Red
}

Read-Host "Nh·∫•n Enter ƒë·ªÉ tho√°t"
