# Script t·∫°o th∆∞ m·ª•c source s·∫°ch v√† n√©n (KH√îNG c√≥ node_modules)

Write-Host "================================================" -ForegroundColor Cyan
Write-Host "  T·∫°o Source Code S·∫°ch (Kh√¥ng node_modules)" -ForegroundColor Cyan
Write-Host "================================================" -ForegroundColor Cyan
Write-Host ""

$sourceName = "Blog-CMS-Source-Clean"
$zipFile = "$sourceName.zip"

# X√≥a th∆∞ m·ª•c v√† file c≈© n·∫øu c√≥
if (Test-Path $sourceName) {
    Write-Host "[INFO] X√≥a th∆∞ m·ª•c c≈©..." -ForegroundColor Yellow
    Remove-Item $sourceName -Recurse -Force
}
if (Test-Path $zipFile) {
    Write-Host "[INFO] X√≥a file zip c≈©..." -ForegroundColor Yellow
    Remove-Item $zipFile -Force
}

# T·∫°o th∆∞ m·ª•c m·ªõi
Write-Host "[1/3] T·∫°o th∆∞ m·ª•c source..." -ForegroundColor Yellow
New-Item -Path $sourceName -ItemType Directory -Force | Out-Null

# Copy c√°c file c·∫ßn thi·∫øt
Write-Host "[2/3] Copy source code (b·ªè qua node_modules)..." -ForegroundColor Yellow

# Server
Write-Host "  ‚úì Copying server/src..." -ForegroundColor Gray
Copy-Item "server/src" "$sourceName/server/src" -Recurse -Force
Copy-Item "server/package.json" "$sourceName/server/" -Force
if (Test-Path "server/Dockerfile") {
    Copy-Item "server/Dockerfile" "$sourceName/server/" -Force
}
if (Test-Path "server/jest.config.json") {
    Copy-Item "server/jest.config.json" "$sourceName/server/" -Force
}
if (Test-Path "server/README.md") {
    Copy-Item "server/README.md" "$sourceName/server/" -Force
}

# Client
Write-Host "  ‚úì Copying client/src..." -ForegroundColor Gray
Copy-Item "client/src" "$sourceName/client/src" -Recurse -Force
if (Test-Path "client/public") {
    Copy-Item "client/public" "$sourceName/client/public" -Recurse -Force
}
Copy-Item "client/index.html" "$sourceName/client/" -Force
Copy-Item "client/package.json" "$sourceName/client/" -Force
Copy-Item "client/vite.config.js" "$sourceName/client/" -Force
Copy-Item "client/tailwind.config.js" "$sourceName/client/" -Force
Copy-Item "client/postcss.config.js" "$sourceName/client/" -Force
if (Test-Path "client/README.md") {
    Copy-Item "client/README.md" "$sourceName/client/" -Force
}

# Database
if (Test-Path "Database") {
    Write-Host "  ‚úì Copying Database..." -ForegroundColor Gray
    Copy-Item "Database" "$sourceName/Database" -Recurse -Force
}

# Root files
Write-Host "  ‚úì Copying root files..." -ForegroundColor Gray
Copy-Item "README.md" "$sourceName/" -Force
Copy-Item "docker-compose.yml" "$sourceName/" -Force
Copy-Item "run.bat" "$sourceName/" -Force
Copy-Item "stop.bat" "$sourceName/" -Force
if (Test-Path ".gitignore") {
    Copy-Item ".gitignore" "$sourceName/" -Force
}
if (Test-Path "AUTH_SYSTEM.md") {
    Copy-Item "AUTH_SYSTEM.md" "$sourceName/" -Force
}
if (Test-Path "COVER_IMAGE_FEATURE.md") {
    Copy-Item "COVER_IMAGE_FEATURE.md" "$sourceName/" -Force
}
if (Test-Path "VIEW_FEATURE.md") {
    Copy-Item "VIEW_FEATURE.md" "$sourceName/" -Force
}

# N√©n th∆∞ m·ª•c
Write-Host "[3/3] N√©n source code..." -ForegroundColor Yellow
Compress-Archive -Path $sourceName -DestinationPath $zipFile -CompressionLevel Optimal -Force

# T√≠nh k√≠ch th∆∞·ªõc
$zipSize = (Get-Item $zipFile).Length / 1MB

# D·ªçn d·∫πp th∆∞ m·ª•c t·∫°m
Write-Host "[CLEANUP] X√≥a th∆∞ m·ª•c t·∫°m..." -ForegroundColor Yellow
Remove-Item $sourceName -Recurse -Force

# Th√¥ng b√°o k·∫øt qu·∫£
Write-Host ""
Write-Host "================================================" -ForegroundColor Green
Write-Host "  TH√ÄNH C√îNG!" -ForegroundColor Green
Write-Host "================================================" -ForegroundColor Green
Write-Host ""
Write-Host "‚úÖ File ƒë√£ t·∫°o: $zipFile" -ForegroundColor Green
Write-Host "‚úÖ K√≠ch th∆∞·ªõc: $([math]::Round($zipSize, 2)) MB" -ForegroundColor Green
Write-Host ""

if ($zipSize -lt 10) {
    Write-Host "üéâ File ƒë·ªß nh·∫π ƒë·ªÉ n·ªôp b√†i! (< 10MB)" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  File v·∫´n h∆°i n·∫∑ng ($([math]::Round($zipSize, 2)) MB)" -ForegroundColor Yellow
    Write-Host "üí° Ki·ªÉm tra l·∫°i c√≥ th∆∞ m·ª•c n√†o kh√¥ng c·∫ßn thi·∫øt kh√¥ng." -ForegroundColor Yellow
}

Write-Host ""
Write-Host "üìã N·ªôi dung file zip:" -ForegroundColor Cyan
Write-Host "  ‚úì server/src/        (source code)" -ForegroundColor Gray
Write-Host "  ‚úì client/src/        (source code)" -ForegroundColor Gray
Write-Host "  ‚úì Database/          (schema + docs)" -ForegroundColor Gray
Write-Host "  ‚úì README.md          (documentation)" -ForegroundColor Gray
Write-Host "  ‚úì run.bat, stop.bat  (scripts)" -ForegroundColor Gray
Write-Host ""
Write-Host "‚ùå KH√îNG ch·ª©a:" -ForegroundColor Red
Write-Host "  ‚úó node_modules/      (ƒë√£ lo·∫°i b·ªè)" -ForegroundColor Gray
Write-Host "  ‚úó .git/              (ƒë√£ lo·∫°i b·ªè)" -ForegroundColor Gray
Write-Host "  ‚úó .env               (ƒë√£ lo·∫°i b·ªè)" -ForegroundColor Gray
Write-Host ""

Read-Host "Nh·∫•n Enter ƒë·ªÉ tho√°t"
